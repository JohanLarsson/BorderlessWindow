<Window x:Class="BorderlessWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:BorderlessWindow"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="MainWindow"
        Width="800"
        Height="450"
        Background="#FF05050A"
        Foreground="#FF808080"
        mc:Ignorable="d">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="BorderThickness" Value="4" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <!--  Hack around WPF weirdness, bonds not correct when maximized  -->
                    <Setter Property="BorderThickness" Value="8" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="24"
                      CornerRadius="0"
                      GlassFrameThickness="0"
                      NonClientFrameEdges="None"
                      ResizeBorderThickness="4"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="TitleBar">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=Title}" />
            </StackPanel>

            <StackPanel x:Name="WindowButtons"
                        Grid.Column="2"
                        Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="WindowButton"
                           BasedOn="{StaticResource {x:Type Button}}"
                           TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="24" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{x:Null}"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Focusable="False"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF303030" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <Button x:Name="WindowMinimizeButton"
                        Click="OnClickMinimize"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{StaticResource WindowMinimizeGeometry}" Style="{StaticResource IconStyle}" />
                </Button>

                <Button x:Name="WindowMaximizeRestoreButton"
                        Click="OnClickMaximizeRestore"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState, Converter={local:WindowStateToGeometryConverter MaximizeGeometry={StaticResource WindowMaximizeGeometry}, RestoreGeometry={StaticResource WindowRestoreGeometry}}}" Style="{StaticResource IconStyle}" />
                </Button>

                <Button x:Name="WindowCloseButton"
                        Click="OnClickClose"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{StaticResource WindowCloseGeometry}" Style="{StaticResource IconStyle}" />
                </Button>
            </StackPanel>
        </Grid>

        <Grid x:Name="Root" Grid.Row="1">
            <TextBlock HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="Content" />
        </Grid>
    </Grid>
</Window>
